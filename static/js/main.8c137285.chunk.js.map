{"version":3,"sources":["styles/global.ts","assets/images/logo.svg","assets/images/ilustration.svg","pages/Home/styles.ts","assets/images/icon-select.svg","assets/images/icon-copy.svg","components/Generator/styles.ts","components/Generator/index.tsx","pages/Home/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","ContainerFlex","styled","div","FlexItemForm","FlexItemImg","Brand","img","Title","h1","Description","p","Image","Form","form","FormGroup","fieldset","Label","label","LabelResult","props","show","Select","select","selectIcon","Option","option","Input","input","InputWithIcon","copyIcon","FeedbackCopy","small","Generator","useState","typeBranch","setTypeBranch","title","setTitle","branchName","setBranchName","copyText","setCopyText","useEffect","titleFormatted","normalize","replace","toLowerCase","trim","name","length","handleGenerate","value","onChange","e","target","placeholder","className","onClick","copy","document","getElementById","setSelectionRange","execCommand","setTimeout","id","readOnly","Home","src","logoImg","ilustration","Routes","path","component","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8c137285.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n\n    &::-webkit-scrollbar {\n      width: 4px;\n      height: 4px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n        background: #818c8f;\n        border-radius: 2px;\n    }\n\n    &::-webkit-scrollbar-track {\n        background: #ffffff;\n        border-radius: 2px;\n    }\n  }\n\n  body {\n    background-color: #BFE0DC;\n    -webkit-font-smoothing: antialiased;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  body, input, select, button {\n    font-family: 'Poppins', sans-serif;\n    font-size: 14px;\n  }\n\n  #root {\n    max-width: 1184px;\n    margin: 0 auto;\n    padding: 48px;\n\n    @media only screen and (max-width: 700px) {\n      padding: 24px;\n    }\n\n    @media only screen and (min-width: 1056px) {\n      padding: 72px;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.1a289f61.svg\";","export default __webpack_public_path__ + \"static/media/ilustration.f7f9b98c.svg\";","import styled from 'styled-components';\n\nexport const ContainerFlex = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: #ffffff;\n  border-radius: 16px;\n  box-shadow: 16px 16px 16px rgba(0, 123, 103, 0.08);\n  padding: 24px;\n\n  max-width: 1184px;\n  margin: 0 auto;\n  padding: 56px;\n\n  @media only screen and (max-width: 700px) {\n    display: block;\n    padding: 24px;\n  }\n`;\n\nexport const FlexItemForm = styled.div`\n  margin-right: 80px;\n\n  @media only screen and (max-width: 700px) {\n    margin-right: 0px;\n  }\n`;\n\nexport const FlexItemImg = styled.div``;\n\nexport const Brand = styled.img`\n  width: 96px;\n  margin-bottom: 24px;\n  height: auto;\n`;\n\nexport const Title = styled.h1`\n  color: #1b2e35;\n  font-size: 32px;\n  font-weight: 600;\n  line-height: calc(32px * 1.2);\n  margin-bottom: 16px;\n\n  @media only screen and (max-width: 700px) {\n    font-size: 20px;\n    line-height: calc(20px * 1.2);\n  }\n`;\n\nexport const Description = styled.p`\n  color: #1b2e35;\n  font-size: 17px;\n  font-weight: 300;\n  line-height: calc(17px * 1.2);\n\n  @media only screen and (max-width: 700px) {\n    font-size: 13px;\n    line-height: calc(13px * 1.2);\n  }\n`;\n\nexport const Image = styled.img`\n  user-select: none;\n  max-width: 400px;\n\n  @media only screen and (max-width: 700px) {\n    display: none;\n  }\n\n  @media only screen and (min-width: 700px) and (max-width: 990px) {\n    max-width: 300px;\n  }\n\n  @media only screen and (min-width: 1056px) {\n    max-width: 500px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/icon-select.45530a7e.svg\";","export default __webpack_public_path__ + \"static/media/icon-copy.a3cafe18.svg\";","import styled from 'styled-components';\n\nimport selectIcon from '../../assets/images/icon-select.svg';\nimport copyIcon from '../../assets/images/icon-copy.svg';\n\ninterface IFeedbackCopy {\n  show: boolean;\n}\n\nexport const Form = styled.form`\n  margin-top: 32px;\n`;\n\nexport const FormGroup = styled.fieldset`\n  border: none;\n  margin-bottom: 16px;\n\n  &.result-branch-name {\n    margin-top: 32px;\n  }\n`;\n\nexport const Label = styled.label`\n  color: #818c8f;\n  display: block;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 4px;\n\n  @media only screen and (max-width: 700px) {\n    font-size: 13px;\n  }\n`;\n\nexport const LabelResult = styled(Label)<IFeedbackCopy>`\n  color: ${(props: IFeedbackCopy) =>\n    props.show === true ? '#00bea4' : '#818c8f'};\n  transition: color 200ms ease-out;\n`;\n\nexport const Select = styled.select`\n  border: 1px solid #e1e1e1;\n  font-size: 14px;\n  border-radius: 4px;\n  width: 100%;\n  height: 40px;\n  padding: 8px 10px;\n  color: #1b2e35;\n\n  -webkit-appearance: none;\n  background-image: url(${selectIcon});\n  background-size: 10px;\n  background-repeat: no-repeat;\n  background-position-y: center;\n  background-position-x: calc(100% - 16px);\n`;\n\nexport const Option = styled.option``;\n\nexport const Input = styled.input`\n  border: 1px solid #e1e1e1;\n  border-radius: 4px;\n  width: 100%;\n  height: 40px;\n  padding: 8px 10px;\n  color: #1b2e35;\n\n  &::placeholder {\n    color: #818c8f;\n  }\n`;\n\nexport const InputWithIcon = styled(Input)<IFeedbackCopy>`\n  background-image: url(${(props: IFeedbackCopy) =>\n    props.show === true ? copyIcon : 'none'});\n  background-size: 14px;\n  background-repeat: no-repeat;\n  background-position-y: center;\n  background-position-x: calc(100% - 16px);\n  cursor: pointer;\n  border-color: ${(props: IFeedbackCopy) =>\n    props.show === true ? '#00bea4' : '#e1e1e1'};\n  color: #00bea4;\n  padding-right: 40px;\n  transition: border-color 200ms ease-out;\n`;\n\nexport const FeedbackCopy = styled.small<IFeedbackCopy>`\n  margin: 0;\n  font-size: 12px;\n  color: #00bea4;\n  font-weight: 500;\n  opacity: ${(props: IFeedbackCopy) => (props.show === true ? 1 : 0)};\n  transition: opacity 1s ease-out;\n`;\n","/* eslint-disable no-useless-escape */\n\nimport React, { FormEvent, useState, useEffect } from 'react';\n\nimport {\n  Form,\n  FormGroup,\n  Label,\n  LabelResult,\n  Select,\n  Option,\n  Input,\n  InputWithIcon,\n  FeedbackCopy,\n} from './styles';\n\nconst Generator: React.FC = () => {\n  const [typeBranch, setTypeBranch] = useState('Bugfix');\n  const [title, setTitle] = useState('');\n  const [branchName, setBranchName] = useState('');\n  const [copyText, setCopyText] = useState(false);\n\n  function handleCopy(): void {\n    if (title.length > 0) {\n      const copy = document.getElementById('branch-name') as HTMLInputElement;\n      copy.select();\n      copy.setSelectionRange(0, 99999);\n      document.execCommand('copy');\n\n      setCopyText(true);\n\n      setTimeout(() => setCopyText(false), 2000);\n    }\n  }\n\n  function handleGenerate(): void {\n    const text = title\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '')\n      .replace(/[(\\,|\\.|\\;|\\:)]/gi, '')\n      .toLowerCase()\n      .trim();\n\n    const titleFormatted = text.replace(/ +/g, ' ').replace(/\\s/g, '-');\n\n    const name = `${typeBranch.toLowerCase()}/${titleFormatted}`;\n\n    if (title.length > 0) {\n      setBranchName(name);\n    } else {\n      setBranchName('');\n    }\n  }\n\n  useEffect(() => {\n    handleGenerate();\n  }, [title, typeBranch]);\n\n  return (\n    <Form>\n      <FormGroup>\n        <Label>Type branch</Label>\n        <Select\n          value={typeBranch}\n          onChange={(e) => setTypeBranch(e.target.value)}\n        >\n          <Option value=\"Bugfix\">Bugfix</Option>\n          <Option value=\"Engineering\">Engineering</Option>\n          <Option value=\"Feature\">Feature</Option>\n          <Option value=\"Hotfix\">Hotfix</Option>\n          <Option value=\"Release\">Release</Option>\n          <Option value=\"Technical\">Technical</Option>\n        </Select>\n      </FormGroup>\n\n      <FormGroup>\n        <Label>Title</Label>\n        <Input\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"ex: relayout screen login\"\n        />\n      </FormGroup>\n\n      <FormGroup className=\"result-branch-name\" onClick={handleCopy}>\n        <LabelResult show={title.length > 0}>your branch name:</LabelResult>\n        <InputWithIcon\n          show={title.length > 0}\n          id=\"branch-name\"\n          readOnly\n          value={branchName}\n        />\n        <FeedbackCopy show={copyText}>Copied to clipboard!</FeedbackCopy>\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default Generator;\n","import React from 'react';\n\nimport logoImg from '../../assets/images/logo.svg';\nimport ilustration from '../../assets/images/ilustration.svg';\n\nimport {\n  ContainerFlex,\n  FlexItemForm,\n  FlexItemImg,\n  Brand,\n  Title,\n  Description,\n  Image,\n} from './styles';\n\nimport Generator from '../../components/Generator';\n\nconst Home: React.FC = () => {\n  return (\n    <ContainerFlex>\n      <FlexItemForm>\n        <Brand src={logoImg} />\n        <Title>Branch names with git flow structure</Title>\n        <Description>\n          Generate names for your branch from the title very quickly!\n        </Description>\n\n        <Generator />\n      </FlexItemForm>\n\n      <FlexItemImg>\n        <Image src={ilustration} />\n      </FlexItemImg>\n    </ContainerFlex>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" component={Home} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}